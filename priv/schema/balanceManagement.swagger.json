{
  "swagger": "2.0",
  "info": {
    "description": "TMF654 Prepay Balance Management",
    "version": "1.0.0",
    "title": "API BalanceManagement"
  },
  "basePath": "/balanceManagement/v1/",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "bucket"
    },
    {
      "name": "topupBalance"
    },
    {
      "name": "adjustBalance"
    },
    {
      "name": "transferBalance"
    },
    {
      "name": "accumulatedBalance"
    }
  ],
  "paths": {
    "/usage": {
      "get": {
        "tags": [
          "bucket"
        ],
        "operationId": "retrieveBuckets",
        "summary": "retrieveBuckets",
        "description": "This operation lists all bucket entites",
        "deprecated": false,
        "parameters": [
          {
            "name": "product.id",
            "required": true,
            "in": "query",
            "description": "Id of the product",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Balance information was returned successfully",
            "schema": {
              "$ref": "#/definitions/BucketBalance"
            }
          },
          "400": {
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value"
          },
          "404": {
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found"
          },
          "500": {
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error"
          }
        }
      }
    },
    "/bucket/{bucketId}": {
      "get": {
        "tags": [
          "bucket"
        ],
        "operationId": "retrieveBucket",
        "summary": "retrieveBucket",
        "description": "This operation lists a individual bucket entites",
        "deprecated": false,
        "parameters": [
          {
            "name": "bucketId",
            "required": true,
            "in": "path",
            "description": "Id of the bucket to fetch",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Balance information was returned successfully",
            "schema": {
              "$ref": "#/definitions/BucketBalance"
            }
          },
          "400": {
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value"
          },
          "404": {
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found"
          },
          "500": {
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error"
          }
        }
      },
      "delete": {
        "tags": [
          "bucket"
        ],
        "parameters": [
          {
            "name": "bucketId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "identity of the bucket"
          }
        ],
        "operationId": "bucketDelete",
        "summary": "bucketDelete",
        "description": "This operation deletes a 'bucket' by Id",
        "deprecated": false,
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value"
          },
          "404": {
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found"
          },
          "500": {
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error"
          }
        }
      }
    },
    "/product/{id}/accumulatedbalance": {
      "get": {
        "tags": [
          "accumulatedBalance"
        ],
        "operationId": "retrieveAccumulatedBalanceOfProduct",
        "summary": "retrieveAccumulatedBalanceOfProduct",
        "description": "This operation lists total balance or an aggregation of a set of buckets",
        "deprecated": false,
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the product",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Balance information was returned successfully",
            "schema": {
              "$ref": "#/definitions/AccumulatedBalance"
            }
          },
          "400": {
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value"
          },
          "404": {
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found"
          },
          "500": {
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error"
          }
        }
      }
    },
    "/service/{id}/accumulatedbalance": {
      "get": {
        "tags": [
          "accumulatedBalance"
        ],
        "operationId": "retrieveAccumulatedBalanceOfService",
        "summary": "retrieveAccumulatedBalanceOfService",
        "description": "This operation lists total balance or an aggregation of a set of buckets",
        "deprecated": false,
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the product",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Balance information was returned successfully",
            "schema": {
              "$ref": "#/definitions/AccumulatedBalance"
            }
          },
          "400": {
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value"
          },
          "404": {
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found"
          },
          "500": {
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error"
          }
        }
      }
    },
    "/product/{id}/balanceTopup": {
      "post": {
        "tags": [
          "topupBalance"
        ],
        "operationId": "createNewTopupProduct",
        "summary": "createNewTopup",
        "description": "Create a new top-up operation for a given prodcut",
        "deprecated": false,
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the product",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful top-up operation request (resource created)",
            "schema": {
              "$ref": "#/definitions/BalanceTopupBody"
            }
          },
          "400": {
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value"
          },
          "404": {
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found"
          },
          "500": {
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error"
          }
        }
      }
    },
    "/service/{id}/balanceTopup": {
      "post": {
        "tags": [
          "topupBalance"
        ],
        "operationId": "createNewTopupService",
        "summary": "createNewTopup",
        "description": "Create a new top-up operation for a given service",
        "deprecated": false,
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the service",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful top-up operation request (resource created)",
            "schema": {
              "$ref": "#/definitions/BalanceTopupBody"
            }
          },
          "400": {
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value"
          },
          "404": {
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found"
          },
          "500": {
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error"
          }
        }
      }
    },
    "/balanceTransfer": {
      "post": {
        "tags": [
          "transferBalance"
        ],
        "operationId": "createTransfer",
        "summary": "createTransfer",
        "description": "Request a new transfer operation for a given product (or commercial id reference to a product instance consuming the credit held in a bucket for a specific service).",
        "deprecated": false,
        "parameters": [
          {
            "name": "TransferBody",
            "in": "body",
            "description": "The Transfer to be modify.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BalanceTransferBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Transfer operation successful (resource created)",
            "schema": {
              "$ref": "#/definitions/BalanceTransferBody"
            }
          },
          "400": {
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value"
          },
          "404": {
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found"
          },
          "500": {
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error"
          }
        }
      }
    },
    "/balanceAdjustment": {
      "post": {
        "tags": [
          "adjustBalance"
        ],
        "operationId": "CreateAdjustment",
        "summary": "CreateAdjustment",
        "description": "Perform a balance adjustment for a given bucket on a product (or commercial id reference to a product instance consuming the credit held in a bucket for a specific service).",
        "deprecated": false,
        "parameters": [
          {
            "name": "AdjustmentBody",
            "in": "body",
            "description": "The Adjustment to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BalanceAdjustmentBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful adjustment operation (resource created)",
            "schema": {
              "$ref": "#/definitions/BalanceTransferBody"
            }
          },
          "400": {
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value"
          },
          "404": {
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found"
          },
          "500": {
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error"
          }
        }
      }
    }
  },
  "definitions": {
    "BucketBalance": {
      "description": "Represents and tracks the amount remained or owed for a certain type of service by certain customer",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique Identifier within the server for the bucket"
        },
        "href": {
          "type": "string",
          "description": "A resource URI pointing to the resource in the OB that stores the detailed information for the bucket"
        },
        "name": {
          "type": "string",
          "description": "Friendly name to identify the bucket"
        },
        "description": {
          "type": "string",
          "description": "Text describing the contents of the balance managed by the bucket"
        },
        "bucketType": {
          "type": "string",
          "description": "Type of prepay balance bucket (e.g.: promotion, deposit, bonus, data, voice, or any other service type)"
        },
        "remainedAmount": {
          "$ref": "#/definitions/QuantityType",
          "description": "Amount remained in the bucket"
        },
        "reservedAmount": {
          "$ref": "#/definitions/QuantityType",
          "description": "Indicate the reserved amount on the bucket"
        },
        "endDate": {
          "$ref": "#/definitions/TimePeriodType",
          "description": "The period for which the balance in the bucket is valid"
        },
        "status": {
          "type": "string",
          "description": "Status for the balance (active, expired, suspended)"
        },
        "product": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductRefType"
          },
          "description": "A reference to the product whose consumption is managed by the bucket. This is an array to allow scenarios where a given bucket is shared between different products."
        }
      },
      "required": [
        "id",
        "href",
        "bucketType",
        "validFor",
        "status",
        "product"
      ]
    },
    "AccumulatedBalance": {
      "description": "Represents and tracks the aggregated amount remained or owed in certain account which is owned by certain customer for a set of buckets.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Friendly name to identify the aggregated balance"
        },
        "description": {
          "type": "string",
          "description": "Text describing the contents of the aggregated balance"
        },
        "totalBalance": {
          "$ref": "#/definitions/QuantityType",
          "description": "Aggregated for a set of prepay balance buckets associated to the product"
        },
        "bucket": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BucketBalanceRefType"
          },
          "description": "A reference to the buckets involved in the aggregation"
        },
        "product": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductRefType"
          },
          "description": "A reference to the product whose consumption is managed by the bucket . This is an array to allow scenarios where a buckets are shared between different products"
        }
      },
      "required": [
        "name",
        "totalBalance",
        "bucket",
        "product"
      ]
    },
    "BalanceTopupBody": {
      "properties": {
        "type": {
          "type": "string",
          "description": "A preconfigured value that describes a TopUp type which determines the prepay balance bucket in which the top-up is done (national-voice, roaming-voice, promotional-voice, data, ....)"
        },
        "channel": {
          "$ref": "#/definitions/ChannelRefType",
          "description": "Indicator for the channel used to request the top-up operation. Structure including at least attribute “name”"
        },
        "amount": {
          "$ref": "#/definitions/QuantityType",
          "description": "Amount (can be monetary or non-monetary) to be recharged in the bucket"
        },
        "product": {
          "$ref": "#/definitions/ProductRefType",
          "description": "A reference to the product related to the bucket that is impacted by the balance related operation"
        }
      },
      "required": [
        "type",
        "channel",
        "amount"
      ]
    },
    "BalanceTransferBody": {
      "properties": {
        "type": {
          "type": "string",
          "description": "A preconfigured value that describes a TopUp type which determines the prepay balance bucket in which the top-up is done (national-voice, roaming-voice, promotional-voice, data, ....)"
        },
        "channel": {
          "$ref": "#/definitions/ChannelRefType",
          "description": "Indicator for the channel used to request the top-up operation. Structure including at least attribute “name”"
        },
        "targetId": {
          "type": "string",
          "description": "Identifier for the entity that receives the transfer (reference to a product via a commercial identifier such as an msisidn that relates to an internal product id)"
        },
        "amount": {
          "$ref": "#/definitions/QuantityType",
          "description": "Amount (can be monetary or non-monetary) to be transferred"
        },
        "product": {
          "$ref": "#/definitions/ProductRefType",
          "description": "A reference to the product related to the bucket that is impacted by the balance related operation"
        }
      },
      "required": [
        "type",
        "channel",
        "targetId",
        "amount"
      ]
    },
    "BalanceAdjustmentBody": {
      "properties": {
        "type": {
          "type": "string",
          "description": "A preconfigured value that describes a TopUp type which determines the prepay balance bucket in which the top-up is done (national-voice, roaming-voice, promotional-voice, data, ....)"
        },
        "amount": {
          "$ref": "#/definitions/QuantityType",
          "description": "Amount (can be monetary or non-monetary) to be recharged in the bucket. It could refer to positive (increment) or negative (decrement) values"
        },
        "product": {
          "$ref": "#/definitions/ProductRefType",
          "description": "A reference to the product related to the bucket that is impacted by the balance related operation"
        }
      },
      "required": [
        "type",
        "amount"
      ]
    },
    "ChannelRefType": {
      "description": "link to the resource that holds information about the channel used to initiate the topup operation request",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the channel entity"
        },
        "href": {
          "type": "string",
          "description": "A resource URI pointing to the resource in the OB that stores the channel information"
        },
        "name": {
          "type": "string",
          "description": "Name of the channel"
        }
      },
      "required": [
        "id",
        "href"
      ]
    },
    "PaymentMethodRefOrValueType": {
      "description": "link to the resource that holds information about the payment mean used to complete the operation",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the channel entity"
        },
        "href": {
          "type": "string",
          "description": "A resource URI pointing to the resource in the OB that stores the channel information"
        },
        "name": {
          "type": "string",
          "description": "Name of the channel"
        },
        "type": {
          "type": "string",
          "description": "Type of payment method (bankcard, voucher, …)"
        },
        "details": {
          "$ref": "#/definitions/RelatedPartyRefType",
          "description": "The list of parameters depends on the type of payment method"
        }
      },
      "required": [
        "id",
        "href"
      ]
    },
    "BalanceTransferStatusTypeModify": {
      "properties": {
        "status": {
          "type": "string"
        }
      },
      "required": [
        "status"
      ]
    },
    "BalanceTopupStatusTypeModify": {
      "properties": {
        "status": {
          "type": "string",
          "description": "Current status of the operation request"
        }
      },
      "required": [
        "status"
      ]
    },
    "BalanceTopupStatusType": {
      "allOf": [
        {
          "$ref": "#/definitions/BalanceTopupStatusTypeModify"
        }
      ],
      "description": "Structure including specific information about change of status for the topup operation",
      "properties": {
        "statusChangeDate": {
          "type": "string",
          "description": "Date in which the latest change of status was requested"
        }
      },
      "required": [
        "statusChangeDate"
      ]
    },
    "BucketBalanceRefType": {
      "description": "link to the resource that holds bucket balance information",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the bucket entity"
        },
        "href": {
          "type": "string",
          "description": "A resource URI pointing to the resource in the OB that stores the balance information for a bucket"
        }
      },
      "required": [
        "id",
        "href"
      ]
    },
    "ProductRefType": {
      "description": "Representation of a resource that holds information about the product that is linked to the bucket balance.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the product entity"
        },
        "href": {
          "type": "string",
          "description": "A resource URI pointing to the resource in the OB that stores the product information"
        },
        "name": {
          "type": "string",
          "description": "Name of the product"
        }
      },
      "required": [
        "id",
        "href"
      ]
    },
    "QuantityType": {
      "description": "Representation of a quantity of something. I can also be used to represent a quantity range",
      "properties": {
        "amount": {
          "format": "decimal",
          "type": "number",
          "description": "Measured amount"
        },
        "units": {
          "type": "string",
          "description": "Units the quantity is measured in"
        }
      },
      "required": [
        "units",
        "amount"
      ]
    },
    "TimePeriodType": {
      "description": "Representation of a time period",
      "properties": {
        "startDateTime": {
          "format": "date-time",
          "type": "string",
          "description": "Start date of the period"
        },
        "endDateTime": {
          "format": "date-time",
          "type": "string",
          "description": "End date of the period"
        }
      },
      "required": [
        "startDateTime"
      ]
    },
    "PartyAccountRefType": {
      "description": "Information about a resource that holds information about the account that owns the bucket",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the account entity"
        },
        "href": {
          "type": "string",
          "description": "A resource URI pointing to the resource in the OB that stores the account information"
        },
        "name": {
          "type": "string",
          "description": "Name of the account"
        }
      },
      "required": [
        "id",
        "href"
      ]
    },
    "RelatedPartyRefType": {
      "description": "Information about an associated entity and its role",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the account entity"
        },
        "href": {
          "type": "string",
          "description": "A resource URI pointing to the resource in the OB that stores the account information"
        },
        "name": {
          "type": "string",
          "description": "Name of the account"
        },
        "role": {
          "type": "string",
          "description": "Role describing the relationship with the related element"
        }
      },
      "required": [
        "role",
        "name"
      ]
    },
    "RealizingResourceRefType": {
      "description": "Information about a resource that holds realizes the product that is linked to the bucket balance",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the related party"
        },
        "href": {
          "type": "string",
          "description": "Reference to the party"
        },
        "name": {
          "type": "string",
          "description": "Name of the resource"
        },
        "@Type": {
          "type": "string",
          "description": "Indicates the type of resource"
        },
        "value": {
          "type": "string",
          "description": "The resource value that can be used to identify a resource with a public key (e.g.: a tel nr, an msisdn)"
        }
      }
    }
  }
}
