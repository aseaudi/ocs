{
  "swagger": "2.0",
  "info": {
    "description": "TMF654 Prepay Balance Management",
    "version": "1.0.0",
    "title": "API BalanceManagement"
  },
  "basePath": "/balanceManagement/v1/",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "bucket"
    },
    {
      "name": "accumulatedBalance"
    },
    {
      "name": "topupBalance"
    },
    {
      "name": "adjustBalance"
    },
    {
      "name": "transferBalance"
    }
  ],
  "paths": {
    "/bucket": {
      "get": {
        "tags": [
          "bucket"
        ],
        "operationId": "retrieveBuckets",
        "summary": "List or find 'bucket' objects",
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/BucketBalance"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/bucket/{bucketId}": {
      "get": {
        "tags": [
          "bucket"
        ],
        "operationId": "retrieveBucket",
        "summary": "This operation lists a individual bucket entites",
        "deprecated": false,
        "parameters": [
          {
            "name": "bucketId",
            "required": true,
            "in": "path",
            "description": "Id of the bucket to fetch",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/BucketBalance"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "bucket"
        ],
        "parameters": [
          {
            "name": "bucketId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "identity of the bucket"
          }
        ],
        "operationId": "bucketDelete",
        "summary": "This operation deletes a 'bucket' by Id",
        "deprecated": false,
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/product/{id}/accumulatedBalance": {
      "get": {
        "tags": [
          "accumulatedBalance"
        ],
        "operationId": "retrieveAccumulatedBalanceOfProduct",
        "summary": "This operation lists total balance or an aggregation of a set of buckets",
        "deprecated": false,
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the product",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Balance information was returned successfully",
            "schema": {
              "$ref": "#/definitions/AccumulatedBalance"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/service/{id}/accumulatedBalance": {
      "get": {
        "tags": [
          "accumulatedBalance"
        ],
        "operationId": "retrieveAccumulatedBalanceOfService",
        "summary": "This operation lists total balance or an aggregation of a set of buckets",
        "deprecated": false,
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the product",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Balance information was returned successfully",
            "schema": {
              "$ref": "#/definitions/AccumulatedBalance"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/product/{id}/balanceTopup": {
      "post": {
        "tags": [
          "topupBalance"
        ],
        "operationId": "createNewTopupProduct",
        "summary": "Create a new top-up operation for a given prodcut",
        "deprecated": false,
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the product",
            "type": "string"
          },
          {
            "name": "TopUp Body",
            "in": "body",
            "description": "The request body.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BalanceTopupBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/BalanceTopupBody"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/service/{id}/balanceTopup": {
      "post": {
        "tags": [
          "topupBalance"
        ],
        "operationId": "createNewTopupService",
        "summary": "Create a new top-up operation for a given service",
        "deprecated": false,
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Id of the service",
            "type": "string"
          },
          {
            "name": "TopUp Body",
            "in": "body",
            "description": "The request body.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BalanceTopupBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/BalanceTopupBody"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/balanceAdjustment": {
      "post": {
        "tags": [
          "adjustBalance"
        ],
        "operationId": "CreateAdjustment",
        "summary": "Perform a balance adjustment",
        "deprecated": false,
        "parameters": [
          {
            "name": "AdjustmentBody",
            "in": "body",
            "description": "The Adjustment to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BalanceAdjustmentBody"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Adjusted"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "BucketBalance": {
      "description": "Represents and tracks the amount remained or owed for a certain type of service by certain customer",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique Identifier within the server for the bucket"
        },
        "href": {
          "type": "string",
          "description": "A resource URI pointing to the resource in the OB that stores the detailed information for the bucket"
        },
        "remainedAmount": {
          "$ref": "#/definitions/QuantityType",
          "description": "Amount remained in the bucket"
        },
        "validFor": {
          "$ref": "#/definitions/TimePeriodType",
          "description": "The period for which the balance in the bucket is valid"
        },
        "product": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductRefType"
          },
          "description": "A reference to the product whose consumption is managed by the bucket."
        }
      }
    },
    "AccumulatedBalance": {
      "description": "Represents and tracks the aggregated amount remained or owed in certain account which is owned by certain customer for a set of buckets.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique Identifier within the server for the product"
        },
        "totalBalance": {
          "$ref": "#/definitions/QuantityType",
          "description": "Aggregated for a set of prepay balance buckets associated to the product"
        },
        "bucket": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BucketBalanceRefType"
          },
          "description": "A reference to the buckets involved in the aggregation"
        },
        "product": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductRefType"
          },
          "description": "A reference to the product whose consumption is managed by the bucket . This is an array to allow scenarios where a buckets are shared between different products"
        }
      }
    },
    "BalanceTopupBody": {
      "properties": {
        "remainedAmount": {
          "$ref": "#/definitions/QuantityType",
          "description": "Amount (can be monetary or non-monetary) to be recharged in the bucket"
        }
      }
    },
    "BalanceAdjustmentBody": {
      "properties": {
        "type": {
          "type": "string",
          "description": "A preconfigured value that describes a TopUp type which determines the prepay balance bucket in which the top-up is done (national-voice, roaming-voice, promotional-voice, data, ....)"
        },
        "amount": {
          "$ref": "#/definitions/QuantityType",
          "description": "Amount (can be monetary or non-monetary) to be recharged in the bucket. It could refer to positive (increment) or negative (decrement) values"
        },
        "product": {
          "$ref": "#/definitions/ProductRefType",
          "description": "A reference to the product related to the bucket that is impacted by the balance related operation"
        }
      }
    },
    "BucketBalanceRefType": {
      "description": "link to the resource that holds bucket balance information",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the bucket entity"
        },
        "href": {
          "type": "string",
          "description": "A resource URI pointing to the resource in the OB that stores the balance information for a bucket"
        }
      },
      "required": [
        "id",
        "href"
      ]
    },
    "ProductRefType": {
      "description": "Representation of a resource that holds information about the product that is linked to the bucket balance.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the product entity"
        }
      }
    },
    "QuantityType": {
      "description": "Representation of a quantity of something",
      "properties": {
        "amount": {
          "type": "string",
          "description": "Measured amount"
        },
        "units": {
          "type": "string",
          "description": "Units the quantity is measured in"
        }
      }
    },
    "TimePeriodType": {
      "description": "Representation of a time period",
      "properties": {
        "startDateTime": {
          "format": "date-time",
          "type": "string",
          "description": "Start date of the period"
        },
        "endDateTime": {
          "format": "date-time",
          "type": "string",
          "description": "End date of the period"
        }
      }
    }
  }
}
