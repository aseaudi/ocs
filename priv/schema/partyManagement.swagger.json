{
  "swagger": "2.0",
  "info": {
    "description": "TMF632 Party Management provides a standardised mechanism for party management such as creation, update, retrieval, import and export of a collection of data. A Party can be an individual or an organization that has any kind of relation with the enterprise. Party is created to record individual or organization information. \n### Resources \n- Individual \n### Operations \nParty management API performs the following operations : \n- Retrieve an individual\n- Retrieve individuals according given criteria \n- Create a new individual \n- Update an existing individual \n- Delete an existing individual",
    "version": "1.0.0",
    "title": "PartyManagement API"
  },
  "host": "serverRoot",
  "basePath": "/partyManagement/v1/",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json;charset=utf-8"
  ],
  "produces": [
    "application/json;charset=utf-8"
  ],
  "tags": [
    {
      "name": "Individual",
      "description": ""
    }
  ],
  "paths": {
    "/individual": {
      "post": {
        "tags": [
          "Individual"
        ],
        "operationId": "individualCreate",
        "summary": "Create an individual",
        "description": "This operation is used to create an individual entity.",
        "deprecated": false,
        "parameters": [
          {
            "name": "Individual",
            "required": true,
            "in": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/Individual"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Individual"
            }
          },
          "400": {
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value"
          },
          "404": {
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found"
          },
          "500": {
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error"
          }
        }
      },
      "get": {
        "tags": [
          "Individual"
        ],
        "operationId": "individualFind",
        "summary": "List individuals",
        "description": "This operation lists individual entities (physical persons)",
        "deprecated": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Individual"
              }
            }
          },
          "400": {
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value"
          },
          "404": {
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found"
          },
          "500": {
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error"
          }
        }
      }
    },
    "/individual/{individualId}": {
      "get": {
        "tags": [
          "Individual"
        ],
        "operationId": "individualGet",
        "summary": "Retrieve an individual",
        "description": "This operation retrieves an individual entity (physical person).",
        "deprecated": false,
        "parameters": [
          {
            "name": "individualId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique identifier of the individual"
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Attribute selection",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Individual"
            }
          },
          "400": {
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value"
          },
          "404": {
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found"
          },
          "500": {
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error"
          }
        }
      },
      "patch": {
        "tags": [
          "Individual"
        ],
        "operationId": "individualPatch",
        "summary": "Update partially an individual",
        "description": "This operation partially updates an individual entity",
        "deprecated": false,
        "parameters": [
          {
            "name": "individualId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique identifier of the individual"
          },
          {
            "name": "Individual",
            "required": true,
            "in": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/Individual"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Individual"
            }
          },
          "400": {
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value"
          },
          "404": {
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found"
          },
          "500": {
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error"
          }
        }
      },
      "delete": {
        "tags": [
          "Individual"
        ],
        "operationId": "individualDelete",
        "summary": "Delete an individual",
        "description": "This operation is used to delete an existing individual entity.",
        "deprecated": false,
        "parameters": [
          {
            "name": "individualId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique identifier of the individual"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request\n\nList of supported error codes:\n- 20: Invalid URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string parameter value"
          },
          "404": {
            "description": "Not Found\n\nList of supported error codes:\n- 60: Resource not found"
          },
          "500": {
            "description": "Internal Server Error\n\nList of supported error codes:\n- 1: Internal error"
          }
        }
      }
    }
  },
  "definitions": {
    "Individual": {
      "description": "",
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the individual",
          "type": "string"
        },
        "password": {
          "description": "Password of the individual",
          "type": "string"
        },
        "locale": {
          "description": "Language of the individual",
          "type": "string"
        }
      }
    }
  }
}
